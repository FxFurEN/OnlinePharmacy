<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>